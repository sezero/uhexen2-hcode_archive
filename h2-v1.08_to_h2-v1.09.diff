diff -urNp h2-1.08/ai.hc h2-1.09/ai.hc
--- h2-1.08/ai.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/ai.hc	1997-09-25 14:17:02.000000000 +0300
@@ -340,7 +340,7 @@ float		r;
 	if(!deathmatch&&(self.classname=="monster_imp_lord"||self.classname=="cube_of_force"))
 		return FindMonsterTarget();
 
-	if (sight_entity_time >= time)
+	if (sight_entity_time >= time&&sight_entity!=world)
 	{
 		client = sight_entity;
 		if (client.enemy == self.enemy)
diff -urNp h2-1.08/client.hc h2-1.09/client.hc
--- h2-1.08/client.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/client.hc	1997-10-01 12:11:10.000000000 +0300
@@ -178,7 +178,7 @@ void() execute_changelevel =
 	other = find (world, classname, "player");
 	while (other != world)
 	{
-		other.sv_flags=serverflags;
+//		other.sv_flags=serverflags;
 		thinktime other : 0.5;
 		other.takedamage = DAMAGE_NO;
 		other.solid = SOLID_NOT;
@@ -197,7 +197,7 @@ void FindDMLevel(void)
 
 	nextmap = string_null;
 
-	if (cvar("registered"))
+	if (cvar("registered") != 0 || cvar("oem") != 0)
 	{
 		if (mapname == "demo1")
 			nextmap = "demo2";
@@ -321,7 +321,7 @@ void() changelevel_touch =
 	}
 
 	//FIXME: temp server flags fix
-	other.sv_flags=serverflags;
+//	other.sv_flags=serverflags;
 	if (coop || deathmatch)
 	{
 		bprint (other.netname);
@@ -338,7 +338,7 @@ void() changelevel_touch =
 
 	SUB_UseTargets ();
 
-	if (!cvar("registered") && !cvar("oem") && nextmap == "village1")
+	if (cvar("registered") == 0 && cvar("oem") == 0 && nextmap == "village1")
 	{
 		remove(self);
 		intermission_running = 2;
@@ -606,8 +606,8 @@ entity spot;
 		self.items(-)IT_WEAPON4|IT_WEAPON3|IT_WEAPON4_1|IT_WEAPON4_2|IT_WEAPON2;
 		self.skin=0;
 	}
-	else if(self.sv_flags)
-		serverflags=self.sv_flags;
+//	else if(self.sv_flags)
+//		serverflags=self.sv_flags;
 
 
 	self.classname = "player";
@@ -690,7 +690,7 @@ entity spot;
 
 	if (self.playerclass == CLASS_NONE)
 	{ // Default it to the paladin if not selected
-		if (cvar("registered"))
+		if (cvar("registered") != 0 || cvar("oem") != 0)
 			setclass(self,rint(random(1,4)));
 		else
 		{
@@ -825,8 +825,8 @@ entity spot;
 		self.items(-)IT_WEAPON4|IT_WEAPON2|IT_WEAPON3|IT_WEAPON4_1|IT_WEAPON4_2;
 		self.skin=0;
 	}
-	else if(self.sv_flags)
-		serverflags=self.sv_flags;
+//	else if(self.sv_flags)
+//		serverflags=self.sv_flags;
 
 	self.movetype=MOVETYPE_WALK;
 	self.viewentity=self;
@@ -1871,6 +1871,9 @@ void() CheckPowerups =
 //			self.proj_ofs='0 0 44';
 
 			SetModelAndThinks();
+			self.oldweapon = IT_WEAPON1;
+			self.weapon = IT_WEAPON1;
+			W_SetCurrentWeapon();
 
 //			W_SetCurrentAmmo ();
 
diff -urNp h2-1.08/constant.hc h2-1.09/constant.hc
--- h2-1.08/constant.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/constant.hc	1997-10-01 12:11:10.000000000 +0300
@@ -418,6 +418,8 @@ float   CE_MAGIC_MISSILE_EXPLOSION	= 34;
 float   CE_GHOST					= 35;//	ghost.spr- translucent
 float   CE_BONE_EXPLOSION			= 36;//	bonexpld.spr
 float   CE_REDCLOUD					= 37;//	rcloud.spr
+float   CE_TELEPORTERPUFFS			= 38;
+float   CE_TELEPORTERBODY			= 39;
 
 // Temporary entities
 float	TE_SPIKE					= 0;
diff -urNp h2-1.08/damage.hc h2-1.09/damage.hc
--- h2-1.08/damage.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/damage.hc	1997-10-01 12:11:10.000000000 +0300
@@ -339,6 +339,18 @@ float exp_bonus;
 
 void monster_pissed (entity attacker)
 {
+entity found;
+	if(self.controller.classname=="player")
+	{//Summoned/controlled monsters
+		if(coop)
+			if(found.classname=="player")
+				return;
+
+		if(deathmatch&&teamplay)
+			if(found.team==self.controller.team)
+				return;
+	}
+
 	if (self.enemy.classname == "player")
 		self.oldenemy = self.enemy;
 	self.enemy = attacker;
diff -urNp h2-1.08/eidolon.hc h2-1.09/eidolon.hc
--- h2-1.08/eidolon.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/eidolon.hc	1997-09-29 14:24:04.000000000 +0300
@@ -752,6 +752,7 @@ float pain_chance;
 		pain_chance=0.2;
 		self.dmg=0;
 	}
+	pain_chance-=self.torncount*0.02;
 	if(self.movetype!=MOVETYPE_NONE)
 		return;
 
@@ -815,8 +816,11 @@ entity missile;
 	makevectors (self.angles);
 	missile.enemy=self.enemy;
 
-	missile.wallspot=normalize((self.enemy.absmin+self.enemy.absmax)*0.5-
-				   (self.origin + self.proj_ofs + v_right*36+v_forward*128));
+	setmodel (missile, "models/eidoball.mdl");
+	setsize (missile, '0 0 0', '0 0 0');		
+	setorigin (missile, self.origin + v_forward*128 + self.proj_ofs+v_right*24-v_up*12);
+
+	missile.wallspot=normalize((self.enemy.absmin+self.enemy.absmax)*0.5-missile.origin);
 	missile.movedir=v_forward;
 	missile.movedir_z=missile.wallspot_z;
 	missile.speed=1000;
@@ -827,9 +831,6 @@ entity missile;
 
 	sound(self,CHAN_AUTO,"eidolon/fireball.wav",1,ATTN_NONE);
 
-	setmodel (missile, "models/eidoball.mdl");
-	setsize (missile, '0 0 0', '0 0 0');		
-	setorigin (missile, self.origin + v_forward*128 + self.proj_ofs+v_right*36);
 
 	thinktime missile : 0.15;
 	missile.think = pmissile2_puff;
@@ -956,7 +957,7 @@ vector forward_dir;
 		newmis.lifetime=time+2;
 
 		forward_dir=v_forward;
-		newmis.o_angle=self.origin+self.proj_ofs+forward_dir*128+v_right*20;
+		newmis.o_angle=self.origin+self.proj_ofs+forward_dir*128+v_right*20-v_up*12;
 		newmis.wallspot=normalize(self.enemy.origin-newmis.o_angle);
 		newmis.movedir=forward_dir;
 		newmis.movedir_z=newmis.wallspot_z*1.7;
@@ -1208,7 +1209,9 @@ float num_players;
 		}
 		if(num_players>4)
 			num_players=4;
-		self.max_health=self.health=self.health*num_players;
+		self.max_health+=1000*num_players;
+		self.health=self.max_health;
+		self.torncount=num_players - 1;
 	}
 	if(self.th_save!=SUB_Null)
 		self.th_save();
@@ -1295,6 +1298,6 @@ void monster_eidolon(void)
 
 	self.th_save=walkmonster_start;
 	self.think=multiplayer_health;
-	thinktime self : 1;
+	thinktime self : 2;
 }
 
diff -urNp h2-1.08/fangel.hc h2-1.09/fangel.hc
--- h2-1.08/fangel.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/fangel.hc	1997-09-25 14:17:10.000000000 +0300
@@ -147,6 +147,9 @@ void() fangel_check_wing =
 {
 float retval;
 
+	if(!self.enemy)
+		return;
+
 	enemy_infront = visible(self.enemy);
 
 	// If we are flying, don't attack as often
@@ -214,6 +217,8 @@ vector vec;
 
 void() fangel_init =
 {  // Set the fallen angel ready
+	dprint(self.enemy.classname);
+	dprint("- Found enemy\n");
 	self.ideal_yaw = vectoyaw(self.enemy.origin - self.origin);
 	self.think=self.th_stand;
 	thinktime self : random(.1,.6);
@@ -234,7 +239,8 @@ void() fangel_init =
 void fangel_wait (void)
 {
 	thinktime self : 0.15;
-	if(LocateTarget()) // We found a target
+	LocateTarget();
+	if(self.enemy) // We found a target
 		fangel_init();
 	else if(random(100)<5&&self.t_width<time)
 	{
@@ -370,6 +376,7 @@ void fangel_move (float thrust)
 
 	if (self.monster_stage == FANGEL_STAGE_WAIT)
 	{
+		dprint("Waiting\n");
 		fangel_wait();
 		return;
 	}
diff -urNp h2-1.08/fx.hc h2-1.09/fx.hc
--- h2-1.08/fx.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/fx.hc	1997-09-30 10:22:12.000000000 +0300
@@ -8,6 +8,17 @@ float GREEN_PUFF	= 2;
 float GREY_PUFF		= 3;
 
 
+void CreateTeleporterBodyEffect (vector org,vector vel,float framelength)
+{
+	starteffect(CE_TELEPORTERBODY, org,vel,framelength);
+}
+
+
+void CreateTeleporterSmokeEffect (vector org,vector vel,float framelength)
+{
+	starteffect(CE_TELEPORTERPUFFS, org,vel,framelength);
+}
+
 // ============= SMOKE ================================
 
 void CreateWhiteSmoke (vector org,vector vel,float framelength)
@@ -181,53 +192,6 @@ void () flash_remove =
 	remove(self);
 };
 
-void (float dir, float top) CreateTeleportPuff =
-{
-	vector holdvelocity, holdangle, holdorigin;
-
-	if(top)
-		holdorigin = ((self.origin + '0 0 64') + (v_forward * 24));
-	else	holdorigin = ((self.origin + '0 0 12') + (v_forward * 24));
-
-	holdangle_x = 0;
-	holdangle_y = dir;
-	holdangle_z = 0;
-	makevectors (holdangle);
-
-	holdvelocity = normalize (v_forward);
-	holdvelocity = holdvelocity * 25;
-
-	if (random() < 0.5)
-		starteffect (CE_TELESMK1, holdorigin, holdvelocity, HX_FRAME_TIME * 3);
-	else	starteffect (CE_TELESMK2, holdorigin, holdvelocity, HX_FRAME_TIME * 3);
-};
-
-void (float top) TeleportTop =
-{
-	float i, dir;
-
-	i = 8;
-	dir = random(0,45);
-	while (i > 0) {
-		CreateTeleportPuff (dir, top);
-		dir += 45;
-		i -= 1;
-	}
-};
-
-void () TeleportShrink =
-{
-	self.nextthink = time + HX_FRAME_TIME;
-	self.think = TeleportShrink;
-	self.scale -= 0.1;
-	self.avelocity_y -= 100;
-	if (self.scale < 0.11) {
-		particle4 (self.origin + '0 0 40', random(5,10),  20, PARTICLETYPE_FASTGRAV, random(20,30));
-		particle4 (self.origin + '0 0 40', random(5,10), 250, PARTICLETYPE_FASTGRAV, random(20,30));
-		remove (self);
-	}
-};
-
 void GenerateTeleportSound (entity center)
 {
 string telesnd;
@@ -248,27 +212,21 @@ float r;
 
 void GenerateTeleportEffect(vector spot1,float teleskin)
 {
-	entity newent, holdent;
+	entity sound_ent;
 
 	if (self.attack_finished > time)
 		return;
 
-	newent = spawn_temp();
-	CreateEntityNew (newent, ENT_TELEPORT, "models/teleport.mdl", chunk_death);
-	setorigin (newent, spot1);
-	newent.drawflags (+) SCALE_TYPE_XYONLY|DRF_TRANSLUCENT;
-	newent.movetype = MOVETYPE_FLYMISSILE;
-	newent.avelocity_y = 2000;
-	newent.scale = 1;
-	newent.skin = teleskin;
-	GenerateTeleportSound (newent);
-	holdent = self;
-	self = newent;
-	TeleportTop (0);
-	TeleportTop (1);
-	self = holdent;
-	newent.nextthink = time + 0.25;
-	newent.think = TeleportShrink;
+	sound_ent = spawn();
+	setorigin(sound_ent,spot1);
+	GenerateTeleportSound(sound_ent);
+	sound_ent.think = SUB_Remove;
+	thinktime sound_ent : 2;
+
+	CreateTeleporterBodyEffect (spot1,'0 0 0',teleskin);  // 3rd parameter is the skin
+
+	CreateTeleporterSmokeEffect (spot1,'0 0 0',HX_FRAME_TIME);
+	CreateTeleporterSmokeEffect (spot1 + '0 0 64','0 0 0',HX_FRAME_TIME);
 
 //	GenerateTeleportSound(newent);
 //	if (self.scale < 0.11)
diff -urNp h2-1.08/icemace.hc h2-1.09/icemace.hc
--- h2-1.08/icemace.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/icemace.hc	1997-09-29 14:24:08.000000000 +0300
@@ -69,6 +69,7 @@ void() IceCubeThink =
 void (entity loser,entity forwhom) SnowJob=
 {
 //FIXME: Make gradual- person slows down then stops
+entity oself;
 	if(loser.solid==SOLID_BSP)
 		return;
 
@@ -115,7 +116,10 @@ void (entity loser,entity forwhom) SnowJ
 		loser.th_die=shatter;
 		AwardExperience(forwhom,loser,loser.experience_value);
 		loser.experience_value=0;
+		oself=self;
+		self=loser;
 		SUB_UseTargets();
+		self=oself;
 	}
 	else
 	{
diff -urNp h2-1.08/impulse.hc h2-1.09/impulse.hc
--- h2-1.08/impulse.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/impulse.hc	1997-10-01 12:11:10.000000000 +0300
@@ -518,6 +518,7 @@ void() ImpulseCommands =
 			}
 			else
 				self.newclass=CLASS_ASSASSIN;
+		self.effects=self.drawflags=FALSE;
 		self.playerclass=self.newclass;//So it drops exp the right amount
 		drop_level(self,2);
 
diff -urNp h2-1.08/invntory.hc h2-1.09/invntory.hc
--- h2-1.08/invntory.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/invntory.hc	1997-09-24 11:45:22.000000000 +0300
@@ -418,8 +418,11 @@ void UseBlast (void)
 						victim.frags=2;
 						victim.enemy=victim.owner;
 						victim.owner = self;
+						if (victim.classname!="tornato")
+						{
 							victim.velocity = victim.velocity * -1;
 							victim.angles = vectoangles(victim.velocity);
+						}
 					}
 
 					holdpos = victim.origin;
diff -urNp h2-1.08/items.hc h2-1.09/items.hc
--- h2-1.08/items.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/items.hc	1997-09-25 11:20:40.000000000 +0300
@@ -110,10 +110,10 @@ void() StartItem =
 			setsize (self, '-8 -8 -28', '8 8 8');
 		else 
 			setsize (self, '-16 -16 -38', '16 16 24');
-		if(self.think!=SUB_Remove)
+		if(self.think!=SUB_Remove&&self.owner.classname=="player"&&self.model!="models/bag.mdl")
 		{
 			self.think=SUB_Remove;
-			thinktime self : 10;//Go away after 10 sec if thrown by player & not a backpack
+			thinktime self : 30;//Go away after 30 sec if thrown by player & not a backpack
 		}
 	}
 	else
diff -urNp h2-1.08/medusa.hc h2-1.09/medusa.hc
--- h2-1.08/medusa.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/medusa.hc	1997-09-29 14:24:12.000000000 +0300
@@ -528,6 +528,12 @@ void MedusaHeadDead () [++ 0 .. 45]
 
 void MedusaHeadDying () [++ 46 .. 105]
 {
+	if(pointcontents(self.origin)==CONTENT_SOLID)
+	{
+		chunk_death();
+		return;
+	}
+
 	if(self.velocity=='0 0 0')
 		if(!self.aflag)
 		{
diff -urNp h2-1.08/mezzoman.hc h2-1.09/mezzoman.hc
--- h2-1.08/mezzoman.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/mezzoman.hc	1997-09-25 14:17:18.000000000 +0300
@@ -617,6 +617,9 @@ float magnitude;//remainder, reflect_cou
 		remove(self);
 	}
 
+	if(other.classname=="funnal"||other.classname=="tornato")
+		return;
+
 	dir = normalize(other.velocity);
 	magnitude=vlen(other.velocity);
 	org = other.origin;
@@ -731,12 +734,19 @@ void spawn_reflect ()
 
 void mezzo_clobber() [++ $clober1 .. $clober16]
 {
+float zofs;
 	ai_charge(1);
 	if(self.frame==$clober7)
 	{
 		makevectors(self.angles);
 		
-		traceline(self.origin+'0 0 30',self.origin+'0 0 30'+v_forward*36,FALSE,self);
+		zofs = self.enemy.origin_z - self.origin_z;
+		if(zofs>20)
+			zofs=20;
+		else if(zofs<-20)
+			zofs=-20;
+
+		traceline(self.origin+'0 0 30',self.origin+'0 0 30'+v_forward*36+v_up*zofs,FALSE,self);
 		if(trace_fraction==1)
 			return;
 
@@ -783,7 +793,7 @@ void mezzo_sword() [++ $sword1 .. $sword
 	}
 	else if(self.frame>=$sword6 && self.frame<=$sword10)
 	{
-	float ofs;
+	float ofs,zofs;
 	vector dir;
 		makevectors(self.angles);
 		ofs=($sword10 - self.frame)*4;
@@ -791,7 +801,13 @@ void mezzo_sword() [++ $sword1 .. $sword
 		dir+=v_right*(ofs - 8)+v_forward*(48 - fabs(16 - ofs));
 		dir=normalize(dir);
 
-		traceline(self.origin+'0 0 37',self.origin+'0 0 37'+dir*48,FALSE,self);
+		zofs = self.enemy.origin_z - self.origin_z;
+		if(zofs>20)
+			zofs=20;
+		else if(zofs<-20)
+			zofs=-20;
+
+		traceline(self.origin+'0 0 37',self.origin+'0 0 37'+dir*48+v_up*zofs,FALSE,self);
 		if(trace_fraction==1)
 			return;
 
diff -urNp h2-1.08/precache.hc h2-1.09/precache.hc
--- h2-1.08/precache.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/precache.hc	1997-10-01 12:11:10.000000000 +0300
@@ -38,7 +38,6 @@ void Precache_lmp (void)
 	precache_file ("gfx/skin100.lmp");
 	precache_file ("gfx/skin101.lmp");
 
-	precache_file ("strings.txt");
 	precache_file ("puzzles.txt");
 	precache_file ("maplist.txt");
 
diff -urNp h2-1.08/projbhvr.hc h2-1.09/projbhvr.hc
--- h2-1.08/projbhvr.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/projbhvr.hc	1997-09-29 14:24:16.000000000 +0300
@@ -178,7 +178,7 @@ float dist, bestdist;	
 		if(loser.health&&loser.takedamage&&(loser.flags2&FL_ALIVE)&&visible(loser)&&loser!=self&&loser!=world&&loser!=self.owner&&!other.effects&EF_NODRAW)//&&!(loser.artifact_active&ARTFLAG_STONED) Why Not?
 			if((!self.aflag||self.ideal_yaw)&&!ahead(loser,self))			//looks for someone in front first time
 				dprint("");//not infront\n");
-			else if(teamplay&&((loser.team==self.owner.team&&self.owner.classname=="player")||(loser.team==self.controller.team&&self.owner.classname=="player")))
+			else if(teamplay&&loser.classname=="player"&&((loser.team==self.owner.team&&self.owner.classname=="player")||(loser.team==self.controller.team&&self.owner.classname=="player")))
 				dprint("");//targeting teammate\n");
 			else if(coop&&loser.classname=="player"&&(self.owner.classname=="player"||self.controller.classname=="player"))
 				dprint("");//target coop player\n");
diff -urNp h2-1.08/rider.hc h2-1.09/rider.hc
--- h2-1.08/rider.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/rider.hc	1997-09-24 11:45:32.000000000 +0300
@@ -490,6 +490,17 @@ void rider_eol(void)
 	else
 		intermission_exittime = time + 2;
 
+
+	//Remove cross-level trigger server flags for next hub
+	serverflags(-)(SFL_CROSS_TRIGGER_1|
+				SFL_CROSS_TRIGGER_2|
+				SFL_CROSS_TRIGGER_3|
+				SFL_CROSS_TRIGGER_4|
+				SFL_CROSS_TRIGGER_5|
+				SFL_CROSS_TRIGGER_6|
+				SFL_CROSS_TRIGGER_7|
+				SFL_CROSS_TRIGGER_8);
+
 	search=find(world,classname,"player");
 	while(search)
 	{//Take away all their goodies
diff -urNp h2-1.08/triggers.hc h2-1.09/triggers.hc
--- h2-1.08/triggers.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/triggers.hc	1997-09-29 14:24:22.000000000 +0300
@@ -1535,7 +1535,7 @@ entity found;
 	found=find(world,classname,"player");
 	if(!found)
 	{
-		bprint("Postponing check\n");
+//		bprint("Postponing check\n");
 		thinktime self : 3;
 	}
 	else if (((self.spawnflags & 1) && (serverflags & SFL_CROSS_TRIGGER_1)) ||
@@ -1702,6 +1702,8 @@ void puzzle_use(void)
 
 	num_found = 0;
 
+	if (self.spawnflags & 4)
+	{
 		found = find(world, classname, "player");
 		while (found)
 		{
@@ -1713,6 +1715,7 @@ void puzzle_use(void)
 			}
 			found = find(found, classname, "player");
 		}
+	}
 
 	if (num_found == 1 && !coop)
 	{
@@ -1842,7 +1845,7 @@ float fire_range;
 
 	if (self.enemy != world && other != self.enemy) return;
 
-	if(self.goalentity.health<=0&&self.goalentity.takedamage)
+	if(self.goalentity.health<=0&&self.health)
 	{
 		self.think=SUB_Remove;
 		thinktime self : 0;
@@ -1925,6 +1928,9 @@ void trigger_control_find_target (void)
 
 	self.goalentity = find(world, targetname, self.target);
 
+	if(self.goalentity.takedamage)
+		self.health=TRUE;
+
 	if (!self.goalentity)
 		objerror("Could not find target\n");
 	else if(self.goalentity.classname=="catapult"||self.goalentity.classname=="obj_catapult2")
diff -urNp h2-1.08/weapons.hc h2-1.09/weapons.hc
--- h2-1.08/weapons.hc	1997-09-25 08:00:00.000000000 +0300
+++ h2-1.09/weapons.hc	1997-09-29 15:45:38.000000000 +0300
@@ -139,8 +139,11 @@ void() T_PhaseMissileTouch =
 
 		sound (self, CHAN_WEAPON, "paladin/axric1.wav", 1, ATTN_NORM);
 			
+		if (self.goalentity)
+		{
 			self.goalentity.think = axetail_run;
 			self.goalentity.nextthink = time + HX_FRAME_TIME;
+		}
 	}
 
 	if (pointcontents(self.origin) == CONTENT_SKY)
